 -- RANDOMA POSITIONS V1.1
 -- Developement by LumiArt - Studio 
-- This plugin create some Randomm Postions / Take a selection in your programmer and create a Open positions with any values enter into the pan and tilt values in programmer or select Blocked values to select a range into an maximum and minimum values defined with the faders 



--[[ ------------------------------------------------------------------------------------
 _     _     _      _    ____  ____  _____            ____  _____  _     ____  _  ____ 
/ \   / \ /\/ \__/|/ \  /  _ \/  __\/__ __\          / ___\/__ __\/ \ /\/  _ \/ \/  _ \
| |   | | ||| |\/||| |  | / \||  \/|  / \    _____   |    \  / \  | | ||| | \|| || / \|
| |_/\| \_/|| |  ||| |  | |-|||    /  | |    \____\  \___ |  | |  | \_/|| |_/|| || \_/|
\____/\____/\_/  \|\_/  \_/ \|\_/\_\  \_/            \____/  \_/  \____/\____/\_/\____/

]] --------------------------------------------------------------------------------------



local pluginName = select(1, ...)
local componentName = select(2, ...)
local signalTable = select(3, ...)
local myHandle = select(4, ...)

local panMAX = nil
local panMIN = nil
local tiltMIN = nil
local tiltMAX = nil 

-- Do Not touch below this line Please

local texture_base64 = [[ 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
]]


local base_64_word = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"

local function base64_decode(data) 
  data = string.gsub(data, '[^' .. base_64_word .. '=]', '')
  return (data:gsub('.', function(x)
    if x == '=' then return '' end
    local r, f = '', (base_64_word:find(x) - 1)
    for i = 6, 1, -1 do
      r=r..(f%2^i -f%2^(i-1) > 0 and '1' or '0')
    end
    return r;
  end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
    if (#x ~= 8) then return '' end
        local c=0
        for i=1,8 do
            c=c + (x:sub(i,i)=='1' and 2^(8-i) or 0)
        end
        return string.char(c)
    end))
end


local decoded_tga = base64_decode(texture_base64)
local file = io.open("C:/ProgramData/MALightingTechnology/gma3_2.3.0/shared/resource/textures/lumiart-studio.tga" , "wb")
file:write(decoded_tga)
file:close()


--------------------------------------------------------------------------------------
---                     AFTER THIS LINE THE REAL CODE START                        --- 
--------------------------------------------------------------------------------------





function randommValues(panMAX , panMIN, tiltMAX, tiltMIN)
  
  if panMAX < panMIN then 
    panMIN , panMAX = panMAX, panMIN

    end

  if tiltMAX < tiltMIN then 
    tiltMIN , tiltMAX = tiltMAX, tiltMIN
  end

  local fixtures = SelectionCount()
  Printf("Fixtures Count  = %i" , fixtures)
 
  if fixtures == 0 then MessageBox({title = "No Selection Active" , message = "Error: No fixtures selected. Operation aborted." , commands = {{value = 1 , name = "OK"}} , timeout = 2000}) end
 
    for  i = 1 , fixtures do 
      local numbersP = math.random(panMIN, panMAX)
      local numbersT = math.random(tiltMIN, tiltMAX)
      Cmd("Next") 
      Cmd("Attribute 'PAN' At " ..numbersP)
      Cmd("Attribute 'TILT' At " ..numbersT)
    end

    Cmd("Reset Selection MAtricks")
    end



function CreateInputDialog(displayHandle)

local displayIndex = Obj.Index(GetFocusDisplay())
if displayIndex > 5 then
  displayIndex = 1
end

-- Get the colors.
local colorTransparent = Root().ColorTheme.ColorGroups.Global.Transparent
local colorBackground = Root().ColorTheme.ColorGroups.Button.Background
local colorBackgroundPlease = Root().ColorTheme.ColorGroups.Button.BackgroundPlease
local colorPartlySelected = Root().ColorTheme.ColorGroups.Global.PartlySelected
local colorPartlySelectedPreset = Root().ColorTheme.ColorGroups.Global.PartlySelectedPreset
local saumonBackground = Root().ColorTheme.ColorGroups.Global.InvalidGridPosition



local display = GetDisplayByIndex(displayIndex)
local screenOverlay = display.ScreenOverlay

screenOverlay:ClearUIChildren()

local dialogWidth = 800
local baseInput = screenOverlay:Append("BaseInput")
baseInput.Name = "RandoMA Positions "
baseInput.H = "1080"
baseInput.W = dialogWidth
baseInput.MaxSize = string.format("%s,%s", display.W * 0.8, display.H)
baseInput.MinSize = string.format("%s,0", dialogWidth - 100)
baseInput.Columns = 1 
baseInput.Rows = 2
baseInput[1][1].SizePolicy = "Fixed"
baseInput[1][1].Size = "60"
baseInput[1][2].SizePolicy = "Stretch"
baseInput.AutoClose = "No"
baseInput.CloseOnEscape = "Yes"




local titleBar = baseInput:Append("TitleBar")
titleBar.Columns = 2  
titleBar.Rows = 1
titleBar.Anchors = "0,0"
titleBar[2][2].SizePolicy = "Fixed"
titleBar[2][2].Size = "50"
titleBar.Texture = "corner2"

local titleBarIcon = titleBar:Append("TitleButton")
titleBarIcon.Text = "LumiArt Studio - RandoMA Position "    
titleBarIcon.Texture = "corner1"
titleBarIcon.Anchors = "0,0"
titleBarIcon.Icon = "ball3d"    

local titleBarCloseButton = titleBar:Append("CloseButton")
titleBarCloseButton.Anchors = "1,0"
titleBarCloseButton.Texture = "corner2"

local dlgFrame = baseInput:Append("DialogFrame")
dlgFrame.H = "100%"
dlgFrame.W = "100%"
dlgFrame.Columns = 1
dlgFrame.Rows = 10
dlgFrame.Anchors = {
  left = 0,
  right = 0,
  top = 1,
  bottom = 1
}
dlgFrame[1][1].SizePolicy = "Fixed" 
dlgFrame[1][1].Size = "120"


dlgFrame[1][2].SizePolicy = "Fixed"  
dlgFrame[1][2].Size = "60"


dlgFrame[1][3].SizePolicy = "Fixed"   
dlgFrame[1][3].Size = "60"


dlgFrame[1][4].SizePolicy = "Fixed"  
dlgFrame[1][4].Size = "50" 


dlgFrame[1][5].SizePolicy = "Fixed" 
dlgFrame[1][5].Size = "60"


dlgFrame[1][6].SizePolicy = "Fixed"  
dlgFrame[1][6].Size = "350"


dlgFrame[1][7].SizePolicy = "Fixed"  
dlgFrame[1][7].Size = "30"

dlgFrame[1][8].SizePolicy = "Fixed"  
dlgFrame[1][8].Size = "40"

dlgFrame[1][9].SizePolicy = "Fixed"    
dlgFrame[1][9].Size = "70"
dlgFrame[1][10].SizePolicy = "Fixed"
dlgFrame[1][10].Size = "50"


local subTitle = dlgFrame:Append("UIObject")
subTitle.Text = "Radomize Positions \n This plugin creates random positions for any values (like pan/tilt). \n Open: fully random values, no limits. \n Blocked: sets min/max range to control the randomness.  "
subTitle.ContentDriven = "Yes"
subTitle.ContentWidth = "No"
subTitle.TextAutoAdjust = "No"
subTitle.Anchors = {left = 0, right = 0, top = 0, bottom = 0}
subTitle.Padding = {left = 20, right = 20, top = 15, bottom = 15}
subTitle.Font = "Medium20"
subTitle.HasHover = "No"
subTitle.BackColor = saumonBackground
subTitle.TextColor = red





local openB = dlgFrame:Append("UILayoutGrid")
openB.Columns = 1
openB.Rows = 1
openB.Anchors = {left = 0, right = 0, top = 2, bottom = 2}
openB.Margin = {left = 80, right = 470, top = 0, bottom = 0}
local open = openB:Append("Button");
open.Anchors = {left = 0, right = 0, top = 0, bottom = 0}
open.Textshadow = 1;
open.HasHover = "Yes";
open.Text = "Open";
open.Font = "Medium20";
open.TextalignmentH = "Centre";
open.PluginComponent = myHandle
open.Clicked = "openButton"
open.Texture = "corner15"



local blockedB = dlgFrame:Append("UILayoutGrid")
blockedB.Columns = 1
blockedB.Rows = 1
blockedB.Anchors = {left = 0 , right = 0, top = 2, bottom = 2}
blockedB.Margin = {left = 470, right = 80, top = 0, bottom =0}
local blocked = blockedB:Append("Button");
blocked.Anchors = {left = 0, right = 0, top = 0, bottom = 0}
blocked.TextShadow = 1;
blocked.HasHover = "Yes";
blocked.Text = "Blocked";
blocked.Font = "Medium20";
blocked.TextalignmentH = "Centre";
blocked.PluginComponent = myHandle;
blocked.Clicked = "blockedButton"
blocked.Texture = "corner15"




local lineB = dlgFrame:Append("UILayoutGrid")
lineB.Columns = 1
lineB.Rows = 1
lineB.Anchors = {left = 0 , right = 0, top = 3, bottom = 3}
lineB.Margin = {left = 0, right = 0, top = 0, bottom = 0}
local line = lineB:Append("Button");
line.Anchors = {left = 0, right = 0, top = 0, bottom = 0}
line.Margin = {left = 50, right = 50, top = 20, bottom = 0}
line.TextShadow = 1;
line.HasHover = "Yes";
line.Text = "";
line.Font = "Medium20";
line.TextalignmentH = "Centre";
line.PluginComponent = myHandle;
line.Clicked = "Clicked"
line.Texture = "treeview_horizontal"




local panTitle = dlgFrame:Append("UIObject")
panTitle.Text = " PAN Min and Max "
panTitle.ContentDriven = "No"
panTitle.ContentWidth = "No"
panTitle.TextAutoAdjust = "No"
panTitle.Anchors = {left =0, right = 0, top = 4, bottom = 4}
panTitle.Padding = {left = 0, right = 0, top = 0, bottom = 0}
panTitle.Margin = {left = 80, right = 470, top = 0, bottom = 0}
panTitle.Font = "Medium20"
panTitle.HasHover = "No"
panTitle.Texture = ""
panTitle.TextColor = saumonBackground  



local tiltTitle = dlgFrame:Append("UIObject")
tiltTitle.Text = "TILT Min and Max "
tiltTitle.ContentDriven = "Yes"
tiltTitle.ContentWidth = "No"
tiltTitle.TextAutoAdjust = "Yes"
tiltTitle.Anchors =  {left = 0, right = 0, top = 4, bottom = 4}
tiltTitle.Padding = {left = 0, right = 0 , top = 0, bottom = 0}
tiltTitle.Margin = {left = 470, right = 80, top = 0, bottom = 0}
tiltTitle.Font = "Medium20"
tiltTitle.HasHover = "No"
tiltTitle.Texture = ""
tiltTitle.TextColor =  saumonBackground






local faderGrid = dlgFrame:Append("UILayoutGrid")
faderGrid.Columns = 4
faderGrid.Rows = 1 
faderGrid.Anchors = {left = 0, right = 0, top = 5, bottom = 5}
faderGrid.Margin = {left = 20, right = 20, top = 15, bottom = 15} -- Pan MIN Fader 
local fader1 = faderGrid:Append("UiFader")    
fader1.Anchors = {left = 0, right = 0, top = 0, bottom = 0 }
fader1.Margin = {left = 20, right = 20, top = 0, bottom = 0}
fader1.Text = "Pan 'MIN' "
fader1.Changed = "panMinFaderChanged"
fader1.PluginComponent = myHandle  
local myobject = ShowData().Masters.Playback[46]
local myproperty = 'NormedValue'
myobject[myproperty] = 50
fader1.Target = myobject


local fader2 = faderGrid:Append("UiFader")
fader2.Anchors = {left = 1, right = 1, top = 0, bottom = 0}
fader2.Margin = {left = 0, right = 40, top = 0, bottom = 0}
fader2.Text = "Pan 'MAX' "
fader2.Changed = "panMaxFaderChanged"
fader2.PluginComponent = myHandle  
local myobject = ShowData().Masters.Playback[47]
local myproperty = 'NormedValue'
myobject[myproperty] = 50
fader2.Target = myobject



local fader3 = faderGrid:Append("UiFader")
fader3.Anchors = {left = 2, right = 2, top = 0, bottom = 0}
fader3.Margin = {left = 40, right = 0, top = 0, bottom = 0}
fader3.Text = "Tilt 'MIN' " 
fader3.Changed = "tiltMinFaderChanged" 
fader3.PluginComponent = myHandle 
local myobject = ShowData().Masters.Playback[48]
local myproperty = 'NormedValue'
myobject[myproperty] = 50
fader3.Target = myobject


local fader4 = faderGrid:Append("UiFader")
fader4.Anchors = {left = 3, right = 3, top = 0, bottom = 0}
fader4.Margin = {left = 20, right = 20, top = 0, bottom = 0}
fader4.Text = "Tilt 'MAX' " 
fader4.Changed = "tiltMaxFaderChanged" 
fader4.PluginComponent = myHandle
local myobject = ShowData().Masters.Playback[49]
local myproperty = 'NormedValue'
myobject[myproperty] = 50
fader4.Target = myobject




local applyB = dlgFrame:Append("UILayoutGrid")
applyB.Columns = 1 
applyB.Rows = 1
applyB.Anchors = {left = 0, right = 0, top = 6, bottom = 6}
applyB.Margin = {left = 0, right = 0, top = 0, bottom = 0}
local applyButton2 = applyB:Append("Button");
applyButton2.Anchors = {left = 0, right = 0, top = 0, bottom = 0}
applyButton2.Margin = {left = 300, right = 300, top = 0, bottom = 0}
applyButton2.Text = "Apply"
applyButton2.TextColor = saumonBackground
applyButton2.Clicked = "applyRandom"
applyButton2.PluginComponent = myHandle
applyButton2.TextalignmentH = "Centre"
applyButton2.Texture = "corner15"
applyButton2.Font = "Medium20"




local line2B = dlgFrame:Append("UILayoutGrid")
line2B.Columns = 1
line2B.Rows = 1
line2B.Anchors = {left = 0 , right = 0, top = 7, bottom = 7}
line2B.Margin = {left = 0, right = 0, top = -40, bottom = 0}
local line2 = line2B:Append("Button");
line2.Anchors = {left = 0, right = 0, top = 0, bottom = 0}
line2.Margin = {left = 50, right = 50, top = 60, bottom = 0}
line2.TextShadow = 1;
line2.HasHover = "Yes";
line2.Text = "";
line2.Font = "Medium20";
line2.TextalignmentH = "Centre";
line2.PluginComponent = myHandle;
line2.Clicked = "Clicked"
line2.Texture = "treeview_horizontal"







local input1Icon = dlgFrame:Append("UILayoutGrid")        
input1Icon.Columns = 2
input1Icon.Rows = 1
input1Icon.Anchors = { left = 0, right = 0, top = 8, bottom = 8} 
input1Icon.Margin = {left = 0, right = 0, top = 30, bottom = 0}





local inputEdit = input1Icon:Append("Button")
inputEdit.Icon = "object_datapool"
inputEdit.Margin = {left = 320, right = 360, top = 0, bottom = 0}
inputEdit.Text = ""
inputEdit.HasHover = "No";   
inputEdit.Padding = "5,5"                                        
inputEdit.Texture = ""         



local inputLineEdit = input1Icon:Append("LineEdit")  
inputLineEdit.Margin = { left = 0 , right = 10, top = 0, bottom = 0}
inputLineEdit.Anchors = {left = 1, right = 1, top = 0, bottom = 0}
inputLineEdit.Prompt = "Preset 2.  "                
inputLineEdit.TextAutoAdjust = "Yes"  
inputLineEdit.Filter = "0123456789"
inputLineEdit.VkPluginName = "TextInputNumOnly"
inputLineEdit.Content = ""
inputLineEdit.MaxTextLength = 3
inputLineEdit.HideFocusFrame = "Yes"
inputLineEdit.PluginComponent = myHandle
inputLineEdit.TextChanged = "OnInput1TextChanged" 
inputLineEdit.Texture = "corner15" 


local okButton = dlgFrame:Append("UILayoutGrid")
okButton.Columns = 1 
okButton.Rows = 1    
okButton.Anchors = { left = 0, right = 0, top = 8, bottom = 8} 
okButton.Margin = {left = 0, right = 0, top = 30, bottom = 0}


local okB = okButton:Append("Button")                                                                                                               
okB.Anchors = { left = 0, right = 0, top = 0, bottom = 0} 
okB.Margin = { left = 160, right = 430, top = 0, bottom = 0}
okB.Textshadow = 1;
okB.HasHover = "Yes";
okB.Text = "Store Preset";
okB.Font = "Medium20";
okB.TextalignmentH = "Centre";
okB.PluginComponent = myHandle
okB.Clicked = "storePreset"
okB.Texture = "corner15"
    

    



local buttonGrid = dlgFrame:Append("UILayoutGrid")
buttonGrid.Columns = 2
buttonGrid.Rows = 1
buttonGrid.Anchors = { left = 0, right = 0, top = 9, bottom = 9}
buttonGrid.Margin = {left = 0, right = 0, top = 35, bottom = -35}






local applyButton = buttonGrid:Append("Button");
applyButton.Anchors = { left = 0, right = 0, top = 0, bottom = 0 } 
applyButton.Textshadow = 1;
applyButton.HasHover = "Yes";
applyButton.Text = "Apply";
applyButton.Font = "Medium20";
applyButton.TextalignmentH = "Centre";
applyButton.PluginComponent = myHandle
applyButton.Clicked = "ApplyButtonClicked"  




local cancelButton = buttonGrid:Append("Button");
cancelButton.Anchors = { left = 1, right = 1 , top = 0, bottom = 0 }
cancelButton.Textshadow = 1;
cancelButton.HasHover = "Yes";
cancelButton.Text = "Cancel";
cancelButton.Font = "Medium20";
cancelButton.TextalignmentH = "Centre";
cancelButton.PluginComponent = myHandle
cancelButton.Clicked = "CancelButtonClicked"
cancelButton.Visible = "Yes"  







  signalTable.CancelButtonClicked = function(caller)
    MessageBox({title = "Cancel - Abandonned" , message = "Random position generation was cancelled by the user." , commands = {{value = 1 , name = "OK" }} , timeout = 2000 })
    Obj.Delete(screenOverlay, Obj.Index(baseInput))
  end




  signalTable.ApplyButtonClicked = function(caller)
    Obj.Delete(screenOverlay, Obj.Index(baseInput))
    Echo("Application 'RandoMA Positions'  Be Terminated with Sucefully" )    
    Printf("Application 'RandoMA Positions' Be Terminated with Sucefully")
    Cmd("ClearAll")
  end




signalTable.OnInput1TextChanged = function(caller) 
    numberPreset = caller.Content
end


signalTable.storePreset = function(caller)    
  if numberPreset == nil or SelectionCount() == 0 then
    MessageBox({title = "Value Empty" , message = "Please enter a value before storing the preset." , commands = {{value = 1 , name = "OK" }} , timeout = 2000 })
  
  else  
  Cmd("Store Preset 2."..numberPreset)    
  MessageBox({title = "Value Empty" , message = "The preset 2." ..numberPreset.. " was stored succefully "  , commands = {{value = 1 , name = "OK" }} , timeout = 2000 })

  end
end

signalTable.openButton = function(caller)
  Cmd("Grid 'Linearize' 'Numerical'")
  randommValues(315, -315, 135, -135)
end
      

signalTable.blockedButton = function(caller)
   Cmd("Attribute 'PAN' At default")
   Cmd("Attribute 'TILT' At default")
   Cmd("Grid 'Linearize' 'Numerical'")


    signalTable.tiltMaxFaderChanged = function(tiltMax)
      local raw = tostring(tiltMax.Value):gsub("%%", ""):gsub(",", "."):match("%S+")
      local floatValue = tonumber(raw)
      if not floatValue then return 0 end
      local mapped = (floatValue - 50) / 50 * 255
      local mappedValues = math.floor(mapped + 0.5) 
      Cmd("Attribute 'TILT' At " ..mappedValues)
      tiltMaxValue = mappedValues
    end

    signalTable.tiltMinFaderChanged = function(tiltMin)
      local raw = tostring(tiltMin.Value):gsub("%%", ""):gsub(",", "."):match("%S+")
      local floatValue = tonumber(raw)
      if not floatValue then return 0 end
      local mapped = (floatValue - 50) / 50 * 255
      local mappedValues = math.floor(mapped + 0.5) 
      Cmd("Attribute 'TILT' At " ..mappedValues)
      tiltMinValue = mappedValues
    end

    signalTable.panMaxFaderChanged = function(panMax)
      local raw = tostring(panMax.Value):gsub("%%", ""):gsub(",", "."):match("%S+")
      local floatValue = tonumber(raw)
      -- Vérification de la validité
      if not floatValue then return 0 end
      -- Centre autour de 0 (50%)
      local mapped = (floatValue - 50) / 50 * 255
      local mappedValues =  math.floor(mapped + 0.5)  
      Cmd("Attribute 'PAN' At " ..mappedValues)
      panMaxValue = mappedValues
    end


    signalTable.panMinFaderChanged = function(panMin)
      local raw = tostring(panMin.Value):gsub("%%", ""):gsub(",", "."):match("%S+")
      local floatValue = tonumber(raw)
      -- Vérification de la validité
      if not floatValue then return 0 end
      -- Centre autour de 0 (50%)
      local mapped = (floatValue - 50) / 50 * 255
      local mappedValues =  math.floor(mapped + 0.5)  
      Cmd("Attribute 'PAN' At " ..mappedValues)
      panMinValue = mappedValues
    end


        signalTable.applyRandom = function(applyRandomm)
          randommValues(panMinValue , panMaxValue , tiltMaxValue, tiltMinValue)
        end
      end
    end

   
    return CreateInputDialog